# This is a very hacky configuration file that builds and tests the package.
# Also, when the commit message includes [publish binary], binaries (in x86, x64, and arm) will be published.

language: node_js

node_js:
  - "16"

before_install:
  - export COMMIT_MESSAGE=$(git log --format=%B --no-merges -n 1 | tr -d '\n')
  - echo $COMMIT_MESSAGE

install:
  - npm install --ignore-scripts
  - npm install request

script:
  # Build auto for testing
  - npm run build;
    npm run test || travis_terminate 1;

  - if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ] && [[ "$COMMIT_MESSAGE" =~ "[publish binary]" ]]; then
      npm run publish:clean;
      npm run publish:x64 || travis_terminate 1;
      npm run publish:clean;
      npm run publish:x86 || travis_terminate 1;
      npm run publish:clean;
      npm run publish:arm || travis_terminate 1;
      npm run publish:clean;
      sleep 15;
      npm run install:from-remote || travis_terminate 1;
      npm run test;
    fi

after_failure:
  - if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ] && [[ "$COMMIT_MESSAGE" =~ "[publish binary]" ]]; then
      npm run unpublish --target_arch=x64;
      npm run unpublish --target_arch=x86;
      npm run unpublish --target_arch=arm;
    fi

os:
  - osx

addons:
  apt:
    packages:
      - g++-multilib
